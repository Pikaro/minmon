#!/bin/bash

PARENT=`ps --no-heading -o %c -p $PPID`

err() {
	if [ "$PARENT" = "bash" ]; then
		TARGET=/dev/stderr
	else
		TARGET=$LOGFILE
	fi

	echo "$$ - ERROR: $@" >> $TARGET
}

log() {
	if [ "$PARENT" = "bash" ]; then
		TARGET=/dev/stdout
	else
		TARGET=$LOGFILE
	fi

	echo "$$ - $@" >> $TARGET
}

minmon_running() {

	if [ -d $MINMON_TMP ]; then
		return `true`
	else
		return `false`
	fi

}

minmon_outfifo() {

	if [ "$2" = "del" ]; then
		rm -f $MINMON_TMP/out.$1
		return 0

	elif [ ! -f $MINMON_TMP/out.$1 ]; then
		touch $MINMON_TMP/out.$1
	fi

	tail -f $MINMON_TMP/out.$1

}

window_hide() {

	xdotool windowunmap $2
	echo $2 >> $MINMON_TMP/hid.$1

}

windows_restore() {

	cat $MINMON_TMP/hid.$1 | while read xid; do

		xdotool windowmap $xid

	done
	rm $MINMON_TMP/hid.$1

}

